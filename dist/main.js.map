{"version":3,"file":"main.js","mappings":"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AACA;;;;;;;;;;ACnFa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACTa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;AACjF;AACA;AACA;AACA;AACA;;;;;;;;;;ACTa;;AAEb;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yDAAyD;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC5Da;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yBAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACqB;AACrB;AACA;AACA;;;;;;;;;;;;;;;AC3TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AChBgD;AACa;AAClB;AAC3C;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM;AACzC;AACA;AACA;AACA,aAAa;AACb,kCAAkC,mBAAmB;AACrD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,oFAAoF,UAAU;AAC9F;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,UAAU;AACV;AACA,4BAA4B;AAC5B,2BAA2B;AAC3B,+BAA+B;AAC/B,SAAS;AACT;AACA,4BAA4B;AAC5B,+BAA+B;AAC/B,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2BAA2B,yDAAS;AACpC;AACA,gBAAgB,6DAAS,EAAE,sEAAsE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iEAAe,SAAS,EAAC;AACzB;AACA;AACA;AACA,6BAA6B,wCAAwC;AACrE,6DAA6D,eAAe;AAC5E,2BAA2B,+DAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;ACxIA;AACA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA,oBAAoB,eAAe;AACnC;AACA,gCAAgC,wBAAwB;AACxD,4BAA4B,oBAAoB;AAChD,0BAA0B,kBAAkB;AAC5C,uBAAuB,cAAc;AACrC,wBAAwB,eAAe;AACvC;AACA;AACA,+DAA+D;AAC/D,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oCAAoC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qBAAqB,UAAU;AAC/B,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc;AACxC,0BAA0B,cAAc;AACxC,0BAA0B,cAAc;AACxC,uBAAuB,aAAa;AACpC,yBAAyB,eAAe;AACxC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iEAAe,aAAa;;;;;;;;;;;;;;;;;;;;;;;ACzBS;AACM;AACS;AACE;AACI;AACP;AACnD;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,UAAU;AACV,UAAU;AACV;AACA,mBAAmB,2DAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,YAAY,EAAC;AAC5B;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gEAAe;AAC7C,+BAA+B,iEAAgB;AAC/C,+BAA+B,mEAAkB;AACjD,uBAAuB,6DAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgE;AAChE;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mDAAS;AAC/B,sBAAsB,mDAAS;AAC/B;AACA,oBAAoB,eAAe;AACnC,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mDAAS;AAC3B,mBAAmB,mDAAS;AAC5B;AACA,wCAAwC,OAAO,kBAAkB,MAAM;AACvE;;;;;;;;;;;;;;;AC1F6C;AAC7C;AACA,kBAAkB,yDAAS;AAC3B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,YAAY;AACZ;AACA,iEAAe,WAAW;;;;;;;;;;;;;;;;;ACdiB;AACL;AACkD;AAC5C;AAC5C;AACA;AACA,cAAc,yDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mDAAS;AACb;AACA,QAAQ,mDAAS;AACjB;AACA;AACA,IAAI,mDAAS;AACb,IAAI,mDAAS,yBAAyB,mDAAS;AAC/C,IAAI,mDAAS;AACb,IAAI,mDAAS,yBAAyB,mDAAS;AAC/C;AACA;AACA;AACA;AACA,iEAAe,iBAAiB,EAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAS;AACjB,QAAQ,mDAAS;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,sEAAsB;AAC1B,IAAI,sEAAsB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,+BAA+B;AAC/B;AACA,qBAAqB,mDAAS;AAC9B;AACA,wBAAwB,KAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iEAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAO;AAC3C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAO;AACrC;AACA;AACA;AACA,8BAA8B,mDAAO;AACrC;AACA;AACA,8BAA8B,mDAAO;AACrC;AACA,0CAA0C,cAAc,mDAAO,aAAa;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,aAAa;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iEAAiB;AACvC;AACA;AACA;AACA,2BAA2B,mDAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAS;AACzB,mBAAmB,mDAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mDAAO;AACzC;AACA;AACA,kCAAkC,mDAAO;AACzC;AACA;AACA,kCAAkC,mDAAO;AACzC;AACA;AACA,sCAAsC,mDAAO;AAC7C,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,gDAAgD,aAAa;AAC7D;AACA;AACA,gBAAgB,mDAAS;AACzB,gBAAgB,mDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mDAAS;AACjD,wCAAwC,mDAAS;AACjD;AACA;AACA;AACA,gCAAgC,mDAAS;AACzC;AACA;AACA;AACA,sBAAsB,mDAAS;AAC/B,QAAQ,mDAAS;AACjB;AACA,YAAY,mDAAS;AACrB,UAAU;AACV;AACA;AACA;AACA,iCAAiC,mDAAS,oCAAoC;AAC9E;;;;;;;;;;;;;;;;;AC/S2D;AACN;AACf;AACK;AAC3C;AACA;AACA;AACA;AACA;AACA,iEAAe,kBAAkB;AACjC;AACA;AACA,oBAAoB,mDAAS;AAC7B,oBAAoB,mDAAS;AAC7B,qBAAqB,mDAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yDAAS;AAC3B;AACA;AACA;AACA,sBAAsB,mDAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iEAAiB;AAChD;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,wCAAwC,+BAA+B,mDAAO,iBAAiB;AAC/F,qCAAqC,+BAA+B,mDAAO,qBAAqB;AAChG,4CAA4C,+BAA+B,mDAAO,iBAAiB;AACnG,2CAA2C,+BAA+B,mDAAO,kBAAkB;AACnG,iBAAiB;AACjB;AACA;AACA;AACA,gEAAgE,mDAAO;AACvE;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,+CAA+C,mDAAO;AACtD;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,2DAA2D,eAAe;AAC1E;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,eAAe;AAC1E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD,oDAAoD,uBAAuB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,yDAAyD;AACpG;AACA,mEAAmE,mDAAO;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yDAAyD;AACzD,gCAAgC,sBAAsB;AACtD;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sDAAY;AACnC,YAAY,mDAAS;AACrB,YAAY,mDAAS;AACrB,YAAY,sDAAY;AACxB;AACA;AACA;AACA,YAAY,sDAAY;AACxB;AACA,UAAU;AACV;AACA,YAAY,sDAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzb6C;AACD;AACE;AACR;AACtC;AACA;AACA,gBAAgB,yDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2DAAa;AAClC,QAAQ,mDAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2DAAa;AAC9B,QAAQ,mDAAS;AACjB;AACA,QAAQ,mDAAS;AACjB,QAAQ,sDAAY,WAAW,sDAAY;AAC3C;AACA;AACA;AACA;AACA,iEAAe,gBAAgB;;;;;;;;;;;;;;;ACzCc;AACD;AAC5C;AACA;AACA,gBAAgB,yDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAY,6BAA6B,sDAAY,WAAW,sDAAY;AACxF;AACA;AACA;AACA;AACA;AACA,iEAAe,eAAe;;;;;;;;;;;;;;;;UCjB9B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;;;;WCrBA;;;;;;;;;;;;;;;ACA4B;AACA;AAC5B;AACmD;AACE;AACrD;AACA;AACA;AACA,8DAAY;AACZ,eAAe,8DAAY;AAC3B;AACA,8DAAY;AACZ;AACA;AACA","sources":["webpack://battlecatship/./src/styles/reset.css","webpack://battlecatship/./src/styles/style.css","webpack://battlecatship/./node_modules/css-loader/dist/runtime/api.js","webpack://battlecatship/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://battlecatship/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://battlecatship/./src/styles/reset.css?4cfb","webpack://battlecatship/./src/styles/style.css?ff94","webpack://battlecatship/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://battlecatship/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://battlecatship/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://battlecatship/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://battlecatship/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://battlecatship/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://battlecatship/./src/scripts/AI-mechanics copy.js","webpack://battlecatship/./src/scripts/class-manager.js","webpack://battlecatship/./src/scripts/game-state.js","webpack://battlecatship/./src/scripts/gameboard-manager.js","webpack://battlecatship/./src/scripts/player-factory.js","webpack://battlecatship/./src/scripts/scene-manager.js","webpack://battlecatship/./src/scripts/scenes/blinder.js","webpack://battlecatship/./src/scripts/scenes/main-game.js","webpack://battlecatship/./src/scripts/scenes/piece-placement.js","webpack://battlecatship/./src/scripts/scenes/player-select.js","webpack://battlecatship/./src/scripts/scenes/title-screen.js","webpack://battlecatship/webpack/bootstrap","webpack://battlecatship/webpack/runtime/compat get default export","webpack://battlecatship/webpack/runtime/define property getters","webpack://battlecatship/webpack/runtime/global","webpack://battlecatship/webpack/runtime/hasOwnProperty shorthand","webpack://battlecatship/webpack/runtime/make namespace object","webpack://battlecatship/webpack/runtime/publicPath","webpack://battlecatship/webpack/runtime/jsonp chunk loading","webpack://battlecatship/webpack/runtime/nonce","webpack://battlecatship/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/reset.css\"],\"names\":[],\"mappings\":\"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB\",\"sourcesContent\":[\"/* http://meyerweb.com/eric/tools/css/reset/ \\r\\n   v2.0 | 20110126\\r\\n   License: none (public domain)\\r\\n*/\\r\\n\\r\\nhtml, body, div, span, applet, object, iframe,\\r\\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\\r\\na, abbr, acronym, address, big, cite, code,\\r\\ndel, dfn, em, img, ins, kbd, q, s, samp,\\r\\nsmall, strike, strong, sub, sup, tt, var,\\r\\nb, u, i, center,\\r\\ndl, dt, dd, ol, ul, li,\\r\\nfieldset, form, label, legend,\\r\\ntable, caption, tbody, tfoot, thead, tr, th, td,\\r\\narticle, aside, canvas, details, embed, \\r\\nfigure, figcaption, footer, header, hgroup, \\r\\nmenu, nav, output, ruby, section, summary,\\r\\ntime, mark, audio, video {\\r\\n\\tmargin: 0;\\r\\n\\tpadding: 0;\\r\\n\\tborder: 0;\\r\\n\\tfont-size: 100%;\\r\\n\\tfont: inherit;\\r\\n\\tvertical-align: baseline;\\r\\n}\\r\\n/* HTML5 display-role reset for older browsers */\\r\\narticle, aside, details, figcaption, figure, \\r\\nfooter, header, hgroup, menu, nav, section {\\r\\n\\tdisplay: block;\\r\\n}\\r\\nbody {\\r\\n\\tline-height: 1;\\r\\n}\\r\\nol, ul {\\r\\n\\tlist-style: none;\\r\\n}\\r\\nblockquote, q {\\r\\n\\tquotes: none;\\r\\n}\\r\\nblockquote:before, blockquote:after,\\r\\nq:before, q:after {\\r\\n\\tcontent: '';\\r\\n\\tcontent: none;\\r\\n}\\r\\ntable {\\r\\n\\tborder-collapse: collapse;\\r\\n\\tborder-spacing: 0;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"./../images/cat-black-moon-pattern-repeating.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\r\n    --COL_mainBG: black;\r\n    --COL_gameBG: antiquewhite;\r\n    --COL_defaultText: white;\r\n    --COL_altDefaultText: antiquewhite;\r\n\r\n    --TINT_dark: rgba(0, 0, 0, .75);\r\n    --TINT_lowDark: rgba(0, 0, 0, .25);\r\n    --TINT_light: rgba(0, 254, 246, 0.2);\r\n    --TINT_green_light: rgba(0, 255, 0, 0.2);\r\n    --TINT_green_dark: rgba(0, 255, 0, 0.8);\r\n    --TINT_red_light: rgba(255, 0, 0, .2);\r\n    --TINT_brown_light: rgba(139, 69, 19, .5);\r\n\r\n    --SIZE_defaultGap: 1.5em;\r\n    --SIZE_defaultPadding: 1.5em;\r\n}\r\n\r\nhtml {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-image: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\r\n    background-size: 33%;\r\n    color: var(--COL_defaultText);\r\n}\r\n\r\nbody {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\nh1 {\r\n    font-size: 4em;\r\n}\r\n\r\nh3 {\r\n    font-size: 2em;\r\n}\r\n\r\n#gameWindow {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: var(--TINT_dark);\r\n}\r\n.fullscreen {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.fl-col-center {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n.full-size{\r\n    width:100%;\r\n    height:100%;\r\n}\r\n.w100{\r\n    width:100%;\r\n}\r\n.fl-center {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.gap {\r\n    gap: var(--SIZE_defaultGap);\r\n}\r\n\r\n.pad {\r\n    padding: var(--SIZE_defaultPadding);\r\n}\r\n.hover-shade:hover{\r\n    opacity:.5;\r\n}\r\n\r\n.scene-container {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.section-container {\r\n    position: relative;\r\n    background-color: var(--TINT_light);\r\n}\r\n\r\n.quarter-box {\r\n    width: 25%;\r\n    aspect-ratio: 1;\r\n}\r\n\r\n.board-tile {\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 1px solid;\r\n    box-sizing: border-box;\r\n}\r\n.blinder{\r\n    position:absolute;\r\n    left:0;\r\n    top:0;\r\n    width:100%;\r\n    height:100%;\r\n    background-color:black;\r\n    z-index:99999;\r\n}\r\n/*Piece Placement*/\r\n.pPlacement-tile:hover {\r\n    border: 3px solid var(--COL_altDefaultText);\r\n}\r\n\r\n.tile-has-unit{\r\n    background-color: blueviolet;\r\n    border:none;\r\n}\r\n\r\n.tile-highlight-low{\r\n    background-color: lightGreen;\r\n}\r\n\r\n.tile-highlight-high{\r\n    background-color: rgb(0,200,0);\r\n}\r\n\r\n.tile-highlight-invalid{\r\n    background-color: rgb(0,100,0);\r\n}\r\n.tile-placed-unit{\r\n    background-color: yellow;\r\n}\r\n.tile-removable-unit{\r\n    opacity: .5;\r\n}\r\n/* main game */\r\n.unit-miss{\r\n    background-color: var(--TINT_dark);\r\n}\r\n.unit-hit{\r\n    background-color: var(--TINT_green_light);\r\n}\r\n.unit-sunk{\r\n    background-color: var(--TINT_red_light);\r\n}\r\n.tile-miss{\r\n    background-color: var(--TINT_dark);\r\n}\r\n.tile-hit{\r\n    background-color: var(--TINT_green_light);\r\n}\r\n.tile-sunk{\r\n    background-color: var(--TINT_red_light);\r\n}\r\n.red-border {\r\n    border: 1px solid red;\r\n}\r\n\r\n.border {\r\n    border: 1px solid;\r\n}\r\n\r\n.border-2px {\r\n    border: 2px solid;\r\n}\r\n.text-box{\r\n    font-size:2rem;\r\n    line-height: 3rem;\r\n    background-color: var(--TINT_dark);\r\n    text-align: center;\r\n}\r\n/* Animations */\r\n.blink {\r\n    animation: 2s infinite alternate blink;\r\n}\r\n\r\n@keyframes blink {\r\n    from {\r\n        opacity: 100%;\r\n    }\r\n\r\n    33% {\r\n        opacity: 100%\r\n    }\r\n\r\n    to {\r\n        opacity: 0%;\r\n    }\r\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,mBAAmB;IACnB,0BAA0B;IAC1B,wBAAwB;IACxB,kCAAkC;;IAElC,+BAA+B;IAC/B,kCAAkC;IAClC,oCAAoC;IACpC,wCAAwC;IACxC,uCAAuC;IACvC,qCAAqC;IACrC,yCAAyC;;IAEzC,wBAAwB;IACxB,4BAA4B;AAChC;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,yDAAyE;IACzE,oBAAoB;IACpB,6BAA6B;AACjC;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,kCAAkC;AACtC;AACA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,UAAU;IACV,WAAW;AACf;AACA;IACI,UAAU;AACd;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,mCAAmC;AACvC;AACA;IACI,UAAU;AACd;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,mCAAmC;AACvC;;AAEA;IACI,UAAU;IACV,eAAe;AACnB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,sBAAsB;AAC1B;AACA;IACI,iBAAiB;IACjB,MAAM;IACN,KAAK;IACL,UAAU;IACV,WAAW;IACX,sBAAsB;IACtB,aAAa;AACjB;AACA,kBAAkB;AAClB;IACI,2CAA2C;AAC/C;;AAEA;IACI,4BAA4B;IAC5B,WAAW;AACf;;AAEA;IACI,4BAA4B;AAChC;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,8BAA8B;AAClC;AACA;IACI,wBAAwB;AAC5B;AACA;IACI,WAAW;AACf;AACA,cAAc;AACd;IACI,kCAAkC;AACtC;AACA;IACI,yCAAyC;AAC7C;AACA;IACI,uCAAuC;AAC3C;AACA;IACI,kCAAkC;AACtC;AACA;IACI,yCAAyC;AAC7C;AACA;IACI,uCAAuC;AAC3C;AACA;IACI,qBAAqB;AACzB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;AACA;IACI,cAAc;IACd,iBAAiB;IACjB,kCAAkC;IAClC,kBAAkB;AACtB;AACA,eAAe;AACf;IACI,sCAAsC;AAC1C;;AAEA;IACI;QACI,aAAa;IACjB;;IAEA;QACI;IACJ;;IAEA;QACI,WAAW;IACf;AACJ\",\"sourcesContent\":[\":root {\\r\\n    --COL_mainBG: black;\\r\\n    --COL_gameBG: antiquewhite;\\r\\n    --COL_defaultText: white;\\r\\n    --COL_altDefaultText: antiquewhite;\\r\\n\\r\\n    --TINT_dark: rgba(0, 0, 0, .75);\\r\\n    --TINT_lowDark: rgba(0, 0, 0, .25);\\r\\n    --TINT_light: rgba(0, 254, 246, 0.2);\\r\\n    --TINT_green_light: rgba(0, 255, 0, 0.2);\\r\\n    --TINT_green_dark: rgba(0, 255, 0, 0.8);\\r\\n    --TINT_red_light: rgba(255, 0, 0, .2);\\r\\n    --TINT_brown_light: rgba(139, 69, 19, .5);\\r\\n\\r\\n    --SIZE_defaultGap: 1.5em;\\r\\n    --SIZE_defaultPadding: 1.5em;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    background-image: url('./../images/cat-black-moon-pattern-repeating.png');\\r\\n    background-size: 33%;\\r\\n    color: var(--COL_defaultText);\\r\\n}\\r\\n\\r\\nbody {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n    font-size: 4em;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n    font-size: 2em;\\r\\n}\\r\\n\\r\\n#gameWindow {\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background-color: var(--TINT_dark);\\r\\n}\\r\\n.fullscreen {\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.fl-col-center {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n.full-size{\\r\\n    width:100%;\\r\\n    height:100%;\\r\\n}\\r\\n.w100{\\r\\n    width:100%;\\r\\n}\\r\\n.fl-center {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.gap {\\r\\n    gap: var(--SIZE_defaultGap);\\r\\n}\\r\\n\\r\\n.pad {\\r\\n    padding: var(--SIZE_defaultPadding);\\r\\n}\\r\\n.hover-shade:hover{\\r\\n    opacity:.5;\\r\\n}\\r\\n\\r\\n.scene-container {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.section-container {\\r\\n    position: relative;\\r\\n    background-color: var(--TINT_light);\\r\\n}\\r\\n\\r\\n.quarter-box {\\r\\n    width: 25%;\\r\\n    aspect-ratio: 1;\\r\\n}\\r\\n\\r\\n.board-tile {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    border: 1px solid;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n.blinder{\\r\\n    position:absolute;\\r\\n    left:0;\\r\\n    top:0;\\r\\n    width:100%;\\r\\n    height:100%;\\r\\n    background-color:black;\\r\\n    z-index:99999;\\r\\n}\\r\\n/*Piece Placement*/\\r\\n.pPlacement-tile:hover {\\r\\n    border: 3px solid var(--COL_altDefaultText);\\r\\n}\\r\\n\\r\\n.tile-has-unit{\\r\\n    background-color: blueviolet;\\r\\n    border:none;\\r\\n}\\r\\n\\r\\n.tile-highlight-low{\\r\\n    background-color: lightGreen;\\r\\n}\\r\\n\\r\\n.tile-highlight-high{\\r\\n    background-color: rgb(0,200,0);\\r\\n}\\r\\n\\r\\n.tile-highlight-invalid{\\r\\n    background-color: rgb(0,100,0);\\r\\n}\\r\\n.tile-placed-unit{\\r\\n    background-color: yellow;\\r\\n}\\r\\n.tile-removable-unit{\\r\\n    opacity: .5;\\r\\n}\\r\\n/* main game */\\r\\n.unit-miss{\\r\\n    background-color: var(--TINT_dark);\\r\\n}\\r\\n.unit-hit{\\r\\n    background-color: var(--TINT_green_light);\\r\\n}\\r\\n.unit-sunk{\\r\\n    background-color: var(--TINT_red_light);\\r\\n}\\r\\n.tile-miss{\\r\\n    background-color: var(--TINT_dark);\\r\\n}\\r\\n.tile-hit{\\r\\n    background-color: var(--TINT_green_light);\\r\\n}\\r\\n.tile-sunk{\\r\\n    background-color: var(--TINT_red_light);\\r\\n}\\r\\n.red-border {\\r\\n    border: 1px solid red;\\r\\n}\\r\\n\\r\\n.border {\\r\\n    border: 1px solid;\\r\\n}\\r\\n\\r\\n.border-2px {\\r\\n    border: 2px solid;\\r\\n}\\r\\n.text-box{\\r\\n    font-size:2rem;\\r\\n    line-height: 3rem;\\r\\n    background-color: var(--TINT_dark);\\r\\n    text-align: center;\\r\\n}\\r\\n/* Animations */\\r\\n.blink {\\r\\n    animation: 2s infinite alternate blink;\\r\\n}\\r\\n\\r\\n@keyframes blink {\\r\\n    from {\\r\\n        opacity: 100%;\\r\\n    }\\r\\n\\r\\n    33% {\\r\\n        opacity: 100%\\r\\n    }\\r\\n\\r\\n    to {\\r\\n        opacity: 0%;\\r\\n    }\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./reset.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./reset.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","const MED_DIFF_SCALE = .5;\r\n\r\nfunction aiFactory(settings) {\r\n    //settings\r\n    const gameboard = settings.gameboard;\r\n    const unitArray = settings.unitArray;\r\n    const difficulty = settings.difficulty;\r\n\r\n    //init\r\n    let tileArray;\r\n    let enemyGameboard;\r\n\r\n    const BOARD_WIDTH = gameboard.get.width();\r\n    const BOARD_HEIGHT = gameboard.get.height();\r\n\r\n    //objects\r\n    function CoordObj(xCoord, yCoord) {\r\n        this.coords = [xCoord, yCoord];\r\n        this.x = xCoord;\r\n        this.y = yCoord;\r\n        this.index = xCoord + (yCoord * BOARD_WIDTH);\r\n        const tile = tileArray[this.index];\r\n        this.attack = () => tile.attack();\r\n        this.getUnit = () => enemyGameboard.getUnitOnCoord(this.coords);\r\n        this.isEqualTo = (coordObj) => {\r\n            if (\r\n                this.x !== coordObj.x\r\n                || this.y !== coordObj.y\r\n            ) return false;\r\n            else return true;\r\n        };\r\n        this.isValid = () => {\r\n            if (\r\n                this.x < 0\r\n                || this.y < 0\r\n                || this.x >= BOARD_WIDTH\r\n                || this.y >= BOARD_HEIGHT\r\n                || previousMoves.isCoordUsed(this)\r\n            ) return false;\r\n            return true;\r\n        };\r\n\r\n        let explored = false;\r\n        this.isExplored = () => explored;\r\n        const exploredDirections = [];\r\n        this.markDirectionExplored = (direction) => {\r\n            if (!exploredDirections.includes(direction))\r\n                exploredDirections.push(direction);\r\n            if (\r\n                exploredDirections.includes('up')\r\n                && exploredDirections.includes('down')\r\n                && exploredDirections.includes('left')\r\n                && exploredDirections.includes('right')\r\n            ) explored = true;\r\n        }\r\n        this.getCoordInDirection = (direction, markExplored = true, distance = 1) => {\r\n            let x = this.x;\r\n            let y = this.y;\r\n            switch (direction) {\r\n                case 'left': x -= distance;\r\n                    break;\r\n                case 'right': x += distance;\r\n                    break;\r\n                case 'up': y += distance;\r\n                    break;\r\n                case 'down': y -= distance;\r\n                    break;\r\n                default:\r\n                    console.log(`${direction} is invalid.`);\r\n                    return getRandomAttackCoord();\r\n            }\r\n            if (markExplored)\r\n                this.markDirectionExplored(direction);\r\n            return new CoordObj(x, y);\r\n        }\r\n    }\r\n    const previousMoves = new function () {\r\n        const moveArray = [];\r\n\r\n        this.isEmpty = () => moveArray.length === 0;\r\n        this.push = (coordObj) => {\r\n            moveArray.push(coordObj);\r\n            hitUnitsObj.push(coordObj);\r\n        };\r\n        this.pop = () => moveArray.pop();\r\n        this.getLast = () => {\r\n            if (!this.isEmpty())\r\n                return moveArray[moveArray.length - 1];\r\n        }\r\n        this.isCoordUsed = (coordObj) => {\r\n            for (let i = 0; i < moveArray.length; i++) {\r\n                let move = moveArray[i];\r\n                if (coordObj.isEqualTo(move)) {\r\n                    return true\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n\r\n        this.noUnitsFound = () => hitUnitsObj.isEmpty();\r\n        this.getLastHitUnitObj = () => hitUnitsObj.getLast();\r\n        this.getHitUnitObjOf = (unit) => hitUnitsObj.getObjOf(unit);\r\n\r\n        const hitUnitsObj = new function () {\r\n            const hitUnitArray = [];\r\n            //public\r\n            this.push = (coordObj) => {\r\n                const unit = coordObj.getUnit();\r\n                if (!unit) return;\r\n                const hitUnitObj = getHitUnitObj(unit);\r\n                if (hitUnitObj) hitUnitObj.addCoordObj(coordObj);\r\n                else hitUnitArray.push(new HitUnitObj(coordObj));\r\n            }\r\n            this.isEmpty = () => hitUnitArray.length <= 0;\r\n            this.getLast = () => hitUnitArray[hitUnitArray.length - 1];\r\n            this.getObjOf = (unit) => this.getHitUnitObjOf(unit);\r\n            //\r\n            function HitUnitObj(coordObj) {\r\n                const hitCoords = [coordObj];\r\n                let lastAddedCoord = coordObj;\r\n                this.unit = coordObj.getUnit();\r\n                removeSelfOnSunk();\r\n                //public methods\r\n                this.getPreviousCoord = () => lastAddedCoord;\r\n                this.isInXAxis = () => {\r\n                    if (hitCoords.length <= 1)\r\n                        return undefined;\r\n                    if (hitCoords[0].x === hitCoords[1].x)\r\n                        return false;\r\n                    else return true;\r\n                }\r\n                this.addCoordObj = (coordObj) => {\r\n                    hitCoords.push(coordObj);\r\n                    lastAddedCoord = coordObj;\r\n                    sortHitCoords();\r\n                    removeSelfOnSunk();\r\n                }\r\n                this.getFirstCoord = () => hitCoords[0];\r\n                this.getLastCoord = () => hitCoords[hitCoords.length - 1];\r\n                this.getNextGuess = (startCoordObj = hitCoords[0]) => {\r\n                    let nextCoordObj = new CoordObj(-1, -1);\r\n                    let inXAxis = this.isInXAxis();\r\n                    if (inXAxis === undefined) {\r\n                        let direction = directionObj.getRandom();\r\n                        for (let i = 0; i < 4; i++) {\r\n                            direction = directionObj.getNext(direction, i);\r\n                            nextCoordObj = startCoordObj.getCoordInDirection(direction);\r\n                            if (nextCoordObj.isValid()) return nextCoordObj;\r\n                        }\r\n                    }\r\n                    let direction = directionObj.getRandom(inXAxis);\r\n                    nextCoordObj = startCoordObj.getCoordInDirection(direction);\r\n                    if (nextCoordObj.isValid()) return nextCoordObj;\r\n                    direction = directionObj.getReverseOf(direction);\r\n                    nextCoordObj = startCoordObj.getCoordInDirection(direction);\r\n                    if (nextCoordObj.isValid()) return nextCoordObj;\r\n                    return this.getNextGuess(this.getLastCoord());\r\n                }\r\n                //HitUnitObj priv\r\n                const getIndex = () => {\r\n                    for (let i = 0; i < hitUnitArray.length; i++) {\r\n                        let unit = hitUnitArray[i].unit;\r\n                        if (this.unit.isEqualTo(unit)) return i;\r\n                    }\r\n                    console.log('Should not appear');\r\n                }\r\n                function removeSelfOnSunk() {\r\n                    if (coordObj.getUnit().get.health() <= 1)\r\n                        hitUnitArray.splice(getIndex(), 1);\r\n                }\r\n                const sortHitCoords = () => {\r\n                    if (hitCoords.length <= 1) return;\r\n                    hitCoords.sort((a, b) => {\r\n                        if (this.isInXAxis()) {\r\n                            return a.x - b.x;\r\n                        } else {\r\n                            return a.y - b.y;\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n            // hitObj priv\r\n\r\n            function getHitUnitObj(unit) {\r\n                for (let i = 0; i < hitUnitArray.length; i++) {\r\n                    let hitUnitObj = hitUnitArray[i];\r\n                    let unit2 = hitUnitObj.unit;\r\n                    if (unit.isEqualTo(unit2)) return hitUnitObj;\r\n                }\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    const attackObj = new function () {\r\n        this.sendAttack = () => {\r\n            const coordObj = getAttackCoordObj();\r\n            previousMoves.push(coordObj);\r\n            coordObj.attack();\r\n        }\r\n\r\n        function getAttackCoordObj() {\r\n            let hitUnitObj = previousMoves.getLastHitUnitObj();\r\n            switch (difficulty) {\r\n                case 'easy':\r\n                    return getRandomAttackCoord();\r\n                    break;\r\n                case 'medium':\r\n                    if (previousMoves.noUnitsFound())\r\n                        return getRandomAttackCoord();\r\n                    return hitUnitObj.getNextGuess();\r\n                    break;\r\n                case 'hard': //could add to check space around randomCoord to see if valid for unit lengths\r\n                    if (previousMoves.noUnitsFound()) {\r\n                        let nextGuess = getRandomAttackCoord();\r\n                        if (!nextGuess.getUnit())\r\n                            nextGuess = getRandomAttackCoord();\r\n                        return getRandomAttackCoord();\r\n                    }\r\n                    let nextGuess = hitUnitObj.getNextGuess();\r\n                    if (!nextGuess.getUnit())\r\n                        nextGuess = hitUnitObj.getNextGuess();\r\n                    return nextGuess;\r\n                    break;\r\n                default:\r\n                    console.log(`Invalid difficulty: ${difficulty}`);\r\n                    return getRandomAttackCoord();\r\n            }\r\n        }\r\n\r\n        function getRandomAttackCoord() {\r\n            let x = Math.round(Math.random() * (BOARD_WIDTH - 1));\r\n            let y = Math.round(Math.random() * (BOARD_HEIGHT - 1));\r\n            let coordObj = new CoordObj(x, y);\r\n            while (!coordObj.isValid()) {\r\n                x++;\r\n                if (x >= BOARD_WIDTH - 1) {\r\n                    x = 0;\r\n                    y++;\r\n                }\r\n                if (y >= BOARD_HEIGHT - 1)\r\n                    y = 0;\r\n                coordObj = new CoordObj(x, y);\r\n            }\r\n            return coordObj;\r\n        }\r\n    }\r\n    const directionObj = new function () {\r\n        const directions = ['left', 'up', 'right', 'down'];\r\n        this.getRandom = (inXAxis = undefined) => {\r\n            let index;\r\n            const rand = Math.random();\r\n            switch (inXAxis) {\r\n                case undefined:\r\n                    index = Math.round(rand * 3);\r\n                    break;\r\n                case true: //0 or 2\r\n                    index = Math.round(rand) * 2;\r\n                    break;\r\n                case false: // 1 or 3\r\n                    index = (Math.round(rand) * 2) + 1\r\n                    break;\r\n            }\r\n            return directions[index];\r\n        }\r\n        this.getReverseOf = (direction) => {\r\n            const index = (directions.indexOf(direction) + 2) % 4;\r\n            return directions[index];\r\n        }\r\n        this.getNext = (direction, distance = 1) => {\r\n            if (distance === 0)\r\n                return direction;\r\n            let index = directions.indexOf(direction);\r\n            if (index < 0)\r\n                return false;\r\n            index = (index + distance) % 4;\r\n            return directions[index];\r\n        }\r\n        this.isValid = (direction) => {\r\n            return directions.includes(direction);\r\n        }\r\n    }\r\n\r\n\r\n    //return object\r\n    const aiObj = {\r\n        sendAttack: () => {\r\n            if (tileArray && enemyGameboard)\r\n                attackObj.sendAttack();\r\n            else console.log('Please set tileArray and enemyGameboard.');\r\n        },\r\n        placeShips: () => {\r\n            const boardHeight = gameboard.get.height();\r\n            const boardWidth = gameboard.get.width();\r\n            unitArray.forEach(unit => {\r\n                let x, y, rotated;\r\n                do {\r\n                    x = Math.round(Math.random() * (boardWidth - 1));\r\n                    y = Math.round(Math.random() * (boardHeight - 1));\r\n                    rotated = Math.random() < .5;\r\n                } while (!gameboard.placeUnit(unit, [x, y], rotated))\r\n            })\r\n\r\n        },\r\n        setTileArray: (tileArr) => tileArray = tileArr,\r\n        setEnemyGameboard: (enemyGB) => enemyGameboard = enemyGB,\r\n    }\r\n\r\n    return aiObj;\r\n}\r\n\r\nexport { aiFactory };\r\n\r\n\r\n\r\n","const CLASSES = {\r\n    unit: 'tile-has-unit',\r\n    lowHighlight: 'tile-highlight-low',\r\n    highHighlight: 'tile-highlight-high',\r\n    invalidHighlight: 'tile-highlight-invalid',\r\n    removableUnit: 'tile-removable-unit',\r\n    hoverShade: 'hover-shade',\r\n\r\n    unitHit:'unit-hit',\r\n    unitMiss:'unit-miss',\r\n    unitSunk:'unit-sunk',\r\n\r\n    tileHit:'tile-hit',\r\n    tileMiss:'tile-miss',\r\n    tileSunk:'tile-sunk',\r\n};\r\n\r\nexport {CLASSES};","import { aiFactory } from \"./AI-mechanics copy\";\r\nimport { Gameboard, unitFactory } from \"./gameboard-manager\";\r\nimport sceneManager from \"./scene-manager\";\r\n\r\nconst BOARD_WIDTH = 7;\r\nconst BOARD_HEIGHT = 7;\r\nconst PIECE_COUNT = 5;\r\nconst PIECE_LENGTH_ARRAY = [0, 0, 1, 1, 1, 1, 0, 0]; //index == piece length  value == piece count of said length\r\nconst DEFAULT_DIFFICULTY = 'hard';\r\nlet _isSinglePlayer;\r\n\r\nlet _currentPlayer = 'p1';\r\nlet _isGameOver = false;\r\n\r\n//todo: change gamestate get/sets to individual objects with get/set and all references\r\nconst gameState = {\r\n    get: {\r\n        game: {\r\n            isSinglePlayer: () => _isSinglePlayer,\r\n            boardWidth: () => BOARD_WIDTH,\r\n            boardHeight: () => BOARD_HEIGHT,\r\n            pieceCount: () => PIECE_COUNT,\r\n            isGameOver: () => _isGameOver,\r\n        },\r\n        scene: {\r\n            currentPlayer: () => _currentPlayer,\r\n        },\r\n    },\r\n    set: {\r\n        game: {\r\n            isSinglePlayer: (bool) => {\r\n                if (_isSinglePlayer !== undefined) {\r\n                    console.log(`Can not change number of players. Returning.`);\r\n                    return;\r\n                }\r\n                if ((bool !== true)\r\n                    && bool !== false) {\r\n                    console.log(`${bool} is not boolean. Returning.`);\r\n                    return;\r\n                }\r\n                _isSinglePlayer = bool;\r\n            },\r\n            isGameOver:(bool) => {_isGameOver = bool},\r\n        },\r\n        scene: {\r\n            swapPlayers: () => {\r\n                if (_currentPlayer === 'p1') _currentPlayer = 'p2';\r\n                else _currentPlayer = 'p1';\r\n                return _currentPlayer;\r\n            },\r\n            setCurrentPlayer: (playerRef) => {\r\n                if (playerRef !== 'p1'\r\n                    && playerRef !== 'p2') return console.log(`Invalid playerRef: ${playerRef}`);\r\n                _currentPlayer = playerRef;\r\n            }\r\n        },\r\n    },\r\n    p1: _generatePlayerObj('p1'),\r\n    p2: _generatePlayerObj('p2'),\r\n    p0: { //here for intellisense\r\n        get: {\r\n            player: () => {},\r\n            units: () => {},\r\n            gameboard: () => {},\r\n        },\r\n        set: {\r\n            player: () => {},\r\n            gameboard: () => {},\r\n        },\r\n    },\r\n};\r\n\r\nfunction _generatePlayerObj(playerRef) {\r\n\r\n    let _player;\r\n    const _gameboard = new Gameboard(BOARD_WIDTH, BOARD_HEIGHT);\r\n    const _units = _createUnitArray();\r\n    const _ai = aiFactory({gameboard:_gameboard,unitArray:_units, difficulty: DEFAULT_DIFFICULTY});\r\n    const playerObj = {\r\n        get: {\r\n            player: () => _player !== undefined ? _player : playerRef,\r\n            units: () => _units,\r\n            gameboard: () => _gameboard,\r\n            playerRef: () => playerRef,\r\n        },\r\n        set: {\r\n            player: (player) => {\r\n                if (_player !== undefined) return console.log('player already set. Returning.');\r\n                _player = player;\r\n            },\r\n            gameboard: (gameboard) => {\r\n                if (_gameboard !== undefined) return console.log('gameboard already set. Returning.');\r\n                _gameboard = gameboard;\r\n            },\r\n        },\r\n        ai:{\r\n            placeShips: _ai.placeShips,\r\n            sendAttack: _ai.sendAttack,\r\n            setTileArray: _ai.setTileArray,\r\n            setEnemyGameboard: _ai.setEnemyGameboard,\r\n        },\r\n    };\r\n    return playerObj;\r\n}\r\n\r\nexport default gameState;\r\n\r\nfunction _createUnitArray() {\r\n    const unitArray = [];\r\n    for (let unitLength = 0; unitLength < PIECE_LENGTH_ARRAY.length; unitLength++) {\r\n        for (let unitCount = PIECE_LENGTH_ARRAY[unitLength]; unitCount > 0; unitCount--) {\r\n            unitArray.push(unitFactory(unitLength));\r\n        }\r\n    }\r\n    return unitArray;\r\n}\r\n\r\nfunction setDummyUnits(){\r\n    console.log('setting dummy units');\r\n    const gameboardArray = [\r\n        gameState.p1.get.gameboard(),\r\n        gameState.p2.get.gameboard()\r\n    ];\r\n    let offset = 1;\r\n    let units = gameState.p1.get.units();\r\n    gameboardArray.forEach(gb =>{\r\n        if(gb === gameState.p1.get.gameboard()){\r\n            units = gameState.p1.get.units()\r\n        }else{\r\n            units = gameState.p2.get.units()\r\n        }\r\n        for(let i = offset; i < units.length + offset; i++){\r\n            gb.placeUnit(units[i - offset],[0,i]);\r\n        }\r\n        offset++;\r\n    })\r\n}\r\nexport {setDummyUnits};","function Gameboard(width = 10, height = 10) {\r\n    let _unitsRemaining = 0;\r\n    const boardSize = width * height;\r\n    const _boardArray = [];\r\n    for (let i = 0; i < boardSize; i++) _boardArray.push(false);\r\n    const _hitArray = [];\r\n    for (let i = 0; i < boardSize; i++) _hitArray.push(false);\r\n    this.get = {\r\n        unitsRemaining: () => { return _unitsRemaining },\r\n        boardArray: () => { return _boardArray },\r\n        hitArray: () => { return _hitArray },\r\n        width: () => { return width },\r\n        height: () => { return height },\r\n    }\r\n    this.placeUnit = (unit, coord, rotated) => {\r\n        if (coord.x !== undefined) coord = [coord.x, coord.y]; //allows coord obj instead of array\r\n        for (let i = 0; i < unit.get.length(); i++) {\r\n            let j = rotated ?\r\n                get2DIndex(coord[0], coord[1] + i) :\r\n                get2DIndex(coord[0] + i, coord[1]);\r\n            if (j === false) return false;\r\n            if (_boardArray[j]) return false;\r\n        }\r\n        for (let i = 0; i < unit.get.length(); i++) {\r\n            let j = rotated ?\r\n                get2DIndex(coord[0], coord[1] + i) :\r\n                get2DIndex(coord[0] + i, coord[1]);\r\n            _boardArray[j] = unit;\r\n        }\r\n        _unitsRemaining++;\r\n        return true;\r\n    }\r\n    this.removeUnit = (unit) => {\r\n        _boardArray.forEach(value => { if (value === unit) value = false; })\r\n    }\r\n    this.getUnitOnCoord = (coord) => {\r\n        const index = get2DIndex(coord);\r\n        if (_boardArray[index]) return _boardArray[index];\r\n        return false;\r\n    }\r\n    this.receiveAttack = (coord) => {\r\n        const i = get2DIndex(coord);\r\n        if (_hitArray[i]) return false;\r\n        _hitArray[i] = true;\r\n\r\n        const unit = _boardArray[i];\r\n        if (!unit) return 'miss';\r\n        unit.hit();\r\n        if (unit.isSunk()) {\r\n            _unitsRemaining--;\r\n            return 'sunk';\r\n        }\r\n        return 'hit';\r\n    }\r\n    this.isGameOver = () => { return _unitsRemaining <= 0 }\r\n\r\n    function get2DIndex(x, y) {\r\n        let a, b;\r\n        if (x.x !== undefined) { //Allows using coordObj\r\n            x = [x.x, x.y];\r\n        }\r\n        if (x[0] === undefined) {\r\n            a = x;\r\n            b = y;\r\n        } else {\r\n            a = x[0];\r\n            b = x[1];\r\n        }\r\n        if (a >= width)\r\n            return false;\r\n        if (b >= height)\r\n            return false\r\n        if ((a < 0) ||\r\n            (b < 0))\r\n            return false;\r\n        return a * width + b;\r\n    }\r\n}\r\n\r\nlet _unitID = 1000;\r\nfunction unitFactory(length) {\r\n    const _id = _unitID++;\r\n    const _length = length;\r\n    let _hits = 0;\r\n\r\n    const unit = {\r\n        get: {\r\n            id: () => _id,\r\n            length: () => _length,\r\n            health: () => _length - _hits,\r\n        },\r\n        hit: () => { _hits++; },\r\n        isSunk: () => { return (_hits >= _length) },\r\n        isEqualTo: (unit) => _id === unit.get.id(),\r\n    }\r\n    return unit;\r\n}\r\n\r\n\r\n\r\nexport { Gameboard, unitFactory };","function playerFactory(name, type = 'human') {\r\n    let _games = 0;\r\n    let _wins = 0;\r\n    let _streak = 0;\r\n    const player = {\r\n        get: {\r\n            name: () => { return name; },\r\n            type: () => { return type; },\r\n            games: () => {return _games},\r\n            wins: ()=>{return _wins},\r\n            streak: ()=>{return _streak},\r\n        },\r\n        addGamePlayed:(wasWon)=>{\r\n            _games++;\r\n            if(wasWon){\r\n                _wins++;\r\n                _streak++;\r\n            }\r\n            else _streak = 0;\r\n        },\r\n    }\r\n\r\n    return player;\r\n}\r\n\r\nexport default playerFactory;","import gameState from \"./game-state\";\r\nimport initBlinder from \"./scenes/blinder\";\r\nimport initTitleScreen from \"./scenes/title-screen\";\r\nimport initPlayerSelect from \"./scenes/player-select\";\r\nimport initPiecePlacement from \"./scenes/piece-placement\";\r\nimport initMainGameScene from \"./scenes/main-game\";\r\n//import playerFactory from \"./player-factory\";\r\n//import gameState from \"./game-state\";\r\n//import gamePieces from \"./game-pieces\";\r\n\r\nlet scenes = {\r\n    main: {},\r\n    p1: {},\r\n    p2: {},\r\n};\r\nconst blinderObj = initBlinder();\r\nlet currentScene;\r\nconst gameWindow = document.getElementById('gameWindow');\r\nconst sceneManager = {\r\n    initializeScenes: initializeScenes,\r\n    getScenes: ()=>scenes,\r\n    getCurrentScene: ()=>currentScene,\r\n    loadScene,\r\n    addBlinder,\r\n};\r\n\r\nexport default sceneManager;\r\n\r\n\r\nfunction loadScene(sceneNode) {\r\n    if (currentScene) currentScene.remove();\r\n    if (!sceneNode) {\r\n        console.log(`${{ sceneNode }} is not a valid node.`);\r\n        return;\r\n    }\r\n    gameWindow.appendChild(sceneNode);\r\n    if(sceneNode.sceneOnLoad) sceneNode.sceneOnLoad();\r\n    currentScene = sceneNode;\r\n}\r\n\r\nfunction initializeScenes() {\r\n    scenes.main.titleScreen = initTitleScreen();\r\n    scenes.main.playerSelect = initPlayerSelect();\r\n    scenes.p1.piecePlacement = initPiecePlacement(); \r\n    scenes.main.game = initMainGameScene();\r\n    //initMainGame();\r\n    //initGameOver();\r\n}\r\nfunction addBlinder(text = undefined){\r\n    gameWindow.appendChild(blinderObj.scene);\r\n    if(text !== undefined){\r\n        blinderObj.setText(text);\r\n    }\r\n}\r\n\r\n//exports\r\n\r\nexport { initScene, generateGameTiles, addGridBoardProperties };\r\n\r\nfunction initScene(templateID) {\r\n    let template = document.getElementById(templateID);\r\n    if (!template) {\r\n        console.log(`${templateID} is an invalid template ID.`)\r\n        return false;\r\n    }\r\n    return template.content.firstElementChild.cloneNode(true);\r\n}\r\nfunction generateGameTiles(parentNode) {\r\n    const tileArr = [];\r\n    const numTilesX = gameState.get.game.boardWidth();\r\n    const numTilesY = gameState.get.game.boardHeight();\r\n    if(parentNode) addGridBoardProperties(parentNode);\r\n    for (let y = 0; y < numTilesY; y++) {\r\n        for (let x = 0; x < numTilesX; x++) {\r\n            const tile = document.createElement('div');\r\n            tile.classList.add('board-tile');\r\n            tile.setAttribute('posX',x);\r\n            tile.setAttribute('posY',y);\r\n            if(parentNode) parentNode.appendChild(tile);\r\n            tileArr.push(tile);\r\n        }\r\n    }\r\n    return tileArr;\r\n}\r\n\r\nfunction addGridBoardProperties(node){\r\n    const width = gameState.get.game.boardWidth();\r\n    const height = gameState.get.game.boardHeight();\r\n    node.style.display = 'grid';\r\n    node.style.gridTemplate = `repeat(${height}, 1fr) / repeat(${width}, 1fr)`;\r\n}","import { initScene } from \"../scene-manager\";\r\nfunction initBlinder(){\r\n    const scene = initScene('TEMPLATE_blinder');\r\n    const textBox = scene.querySelector(\"[blinderID='textBox']\");\r\n    scene.addEventListener('click',(e)=>{\r\n        e.preventDefault(); //untested, should be fine\r\n        setText('');\r\n        scene.remove();\r\n    })\r\n    function setText(text){\r\n        textBox.textContent = text;\r\n    }\r\n    return {scene, setText}\r\n}\r\nexport default initBlinder;","import { CLASSES } from \"../class-manager\";\r\nimport gameState from \"../game-state\";\r\nimport { generateGameTiles, initScene, addGridBoardProperties } from \"../scene-manager\";\r\nimport sceneManager from \"../scene-manager\";\r\n\r\n////////////////////Exports///////////////////////////\r\nconst scene = initScene('TEMPLATE_main-game');\r\nscene.sceneOnLoad = () => {\r\n    gameWindows.p1 = {\r\n        offense: new OffenseGameWindow(playerObjs.p1),\r\n        defense: new DefenseGameWindow(playerObjs.p1)\r\n    };\r\n    gameWindows.p2 = {\r\n        offense: new OffenseGameWindow(playerObjs.p2),\r\n        defense: new DefenseGameWindow(playerObjs.p2)\r\n    }\r\n\r\n    gameWindows.p1.defense.displayUnits();\r\n    gameWindows.p2.defense.displayUnits();\r\n    gameState.set.scene.setCurrentPlayer('p1');\r\n    textBoxObj.displayPlayerTurn();\r\n    if (gameState.get.game.isSinglePlayer()) setDisplayObj.singplePlayer();\r\n    else setDisplayObj.multiplayer();\r\n\r\n    gameState.p1.ai.setTileArray(gameWindows.p1.offense.getTileArray());\r\n    gameState.p1.ai.setEnemyGameboard(gameState.p2.get.gameboard());\r\n    gameState.p2.ai.setTileArray(gameWindows.p2.offense.getTileArray());\r\n    gameState.p2.ai.setEnemyGameboard(gameState.p1.get.gameboard());\r\n}\r\nfunction initMainGameScene() {\r\n    return scene;\r\n}\r\nexport default initMainGameScene;\r\n//////////////////////////////////////////////////////\r\n\r\n//static\r\nconst attackStates = {\r\n    hit: 'hit',\r\n    miss: 'miss',\r\n    sunk: 'sunk',\r\n    error: false,\r\n}\r\n\r\n//data objects\r\nconst playerObjs = {\r\n    p1: gameState.p1,\r\n    p2: gameState.p2,\r\n}\r\nconst gameWindows = {\r\n    p1: {\r\n        offense: new OffenseGameWindow(playerObjs.p1),\r\n        defense: new DefenseGameWindow(playerObjs.p1)\r\n    },\r\n    p2: {\r\n        offense: new OffenseGameWindow(playerObjs.p2),\r\n        defense: new DefenseGameWindow(playerObjs.p2)\r\n    }\r\n}\r\n\r\n// function objects\r\nconst setDisplayObj = new function () {\r\n    const gameBox1 = scene.querySelector(\"[gameID='gameBox-left']\");\r\n    const gameBox2 = scene.querySelector(\"[gameID='gameBox-right']\");\r\n    addGridBoardProperties(gameBox1);\r\n    addGridBoardProperties(gameBox2);\r\n    // this.p1 = () => {\r\n    //     _first(gameWindows.p1.defense);\r\n    //     _second(gameWindows.p1.offense);\r\n    // }\r\n    // this.p2 = () => {\r\n    //     _first(gameWindows.p2.defense);\r\n    //     _second(gameWindows.p2.offense);\r\n    // }\r\n    this.singplePlayer = () => {\r\n        _first(gameWindows.p1.defense);\r\n        _second(gameWindows.p1.offense);\r\n    }\r\n    this.multiplayer = () => {\r\n        _first(gameWindows.p1.offense);\r\n        _second(gameWindows.p2.offense);\r\n    }\r\n    this.custom = (first, second) => {\r\n        _first(first);\r\n        _second(second);\r\n    }\r\n    const _first = (gameWindow) => {\r\n        const tileArray = gameWindow.getTileNodeArray();\r\n        _replaceTilesIn(gameBox1, tileArray)\r\n    }\r\n    const _second = (gameWindow) => {\r\n        const tileArray = gameWindow.getTileNodeArray();\r\n        _replaceTilesIn(gameBox2, tileArray);\r\n    }\r\n    function _replaceTilesIn(gameBox, tileArray) {\r\n        gameBox.textContent = '';\r\n        tileArray.forEach(tile => {\r\n            gameBox.appendChild(tile);\r\n        })\r\n    }\r\n}\r\nconst textBoxObj = new function () {\r\n    const textBox = scene.querySelector(\"[gameID='textBox']\");\r\n    this.clearText = () => { textBox.textContent = '' };\r\n    this.setText = (text) => { textBox.textContent = text };\r\n    this.displayPlayerTurn = () => {\r\n        const pRef = gameState.get.scene.currentPlayer();\r\n        const name = playerObjs[pRef].get.player().get.name();\r\n        this.setText(`${name}'s turn.`)\r\n    }\r\n    this.turnResult = (result) => {\r\n        this.setText(result);\r\n    }\r\n    this.addNewLineText = (text) => {\r\n        textBox.innerHTML += '<br>' + text;\r\n    }\r\n}\r\nfunction DefenseGameWindow(playerObj) {\r\n    //init\r\n    const tileNodes = generateGameTiles();\r\n    const tiles = getTileObjArray(tileNodes);\r\n    const gameboard = playerObj.get.gameboard();\r\n    const enemyRef = getEnemyPlayerRef(playerObj);\r\n    const unitTileArr = [];\r\n\r\n    this.getTileNodeArray = () => tileNodes;\r\n    this.displayUnits = () => {\r\n        tiles.forEach(tile => {\r\n            const coord = tile.getCoord();\r\n            const unit = gameboard.getUnitOnCoord(coord);\r\n            if (unit) tile.addClass(CLASSES.unit);\r\n        })\r\n    }\r\n    this.receiveAttack = (coord) => {\r\n        const unit = gameboard.getUnitOnCoord(coord);\r\n        const attackState = gameboard.receiveAttack(coord);\r\n        const index = getIndexFromCoord(coord);\r\n        const tile = tiles[index];\r\n\r\n        switch (attackState) {\r\n            case attackStates.hit:\r\n                tile.addClass(CLASSES.unitHit);\r\n                pushUnitTileArr(unit, tile)\r\n                break;\r\n            case attackStates.miss:\r\n                tile.addClass(CLASSES.unitMiss);\r\n                break;\r\n            case attackStates.sunk:\r\n                tile.addClass(CLASSES.unitSunk);\r\n                const tileArr = getUnitTileArr(unit).tileArr;\r\n                tileArr.forEach(tile => { tile.addClass(CLASSES.unitSunk); });\r\n                return new AttackObj(attackState, tileArr);\r\n                ///\r\n                break;\r\n            case attackStates.error:\r\n                break;\r\n            default:\r\n                console.log(`Attack state ${attackState} was unexpected.`);\r\n        }\r\n        return new AttackObj(attackState);\r\n    }\r\n    //private fn\r\n    function AttackObj(attackState, affectedTiles) {\r\n        const affectedIndexes = [];\r\n        if (affectedTiles)\r\n            affectedTiles.forEach(tile => {\r\n                affectedIndexes.push(tile.getIndex())\r\n            })\r\n        this.attackState = attackState;\r\n        this.affectedIndexes = affectedIndexes;\r\n    }\r\n    function UnitTileObj(unit, tile) {\r\n        const tileArr = [tile];\r\n        this.unit = unit;\r\n        this.tileArr = tileArr;\r\n        this.pushTile = (tile) => { tileArr.push(tile) };\r\n    }\r\n    function pushUnitTileArr(unit, tile) {\r\n        for (let i = 0; i < unitTileArr.length; i++)\r\n            if (unit === unitTileArr[i].unit)\r\n                return unitTileArr[i].pushTile(tile);\r\n        unitTileArr.push(new UnitTileObj(unit, tile));\r\n    }\r\n    function getUnitTileArr(unit) {\r\n        for (let i = 0; i < unitTileArr.length; i++)\r\n            if (unitTileArr[i].unit === unit)\r\n                return unitTileArr[i];\r\n    }\r\n}\r\nfunction OffenseGameWindow(playerObj) {\r\n    //init\r\n    const tileNodes = generateGameTiles();\r\n    const tiles = getTileObjArray(tileNodes);\r\n    const gameboard = playerObj.get.gameboard();\r\n    const enemyRef = getEnemyPlayerRef(playerObj);\r\n    const enemyGameboard = gameState[enemyRef].get.gameboard();\r\n    //event listeners\r\n    tiles.forEach(tile => {\r\n        const node = tile.getNode();\r\n        node.addEventListener('click', tileOnClick)\r\n        tile.attack = tileOnClick;\r\n\r\n        function tileOnClick(e) {\r\n            if (gameState.get.scene.currentPlayer() == enemyRef\r\n                || gameState.get.game.isGameOver()) return;\r\n\r\n            const coord = tile.getCoord();\r\n            const attackObj = sendAttack(coord);\r\n\r\n            switch (attackObj.attackState) {\r\n                case attackStates.hit:\r\n                    tile.addClass(CLASSES.tileHit);\r\n                    break;\r\n                case attackStates.miss:\r\n                    tile.addClass(CLASSES.tileMiss);\r\n                    break;\r\n                case attackStates.sunk:\r\n                    tile.addClass(CLASSES.tileSunk);\r\n                    attackObj.affectedIndexes.forEach(index => {\r\n                        const tile = tiles[index];\r\n                        tile.addClass(CLASSES.tileSunk)\r\n                    });\r\n                    break;\r\n                case attackStates.error:\r\n                    return;\r\n                    break;\r\n                default:\r\n                    console.log(`Attack state ${attackState} was unexpected.`);\r\n            }\r\n            if (enemyGameboard.isGameOver()) {\r\n                gameState.set.game.isGameOver(true);\r\n                gameState[enemyRef].get.player().addGamePlayed(false);\r\n                playerObj.get.player().addGamePlayed(true);\r\n                textBoxObj.setText('You win!');\r\n            }\r\n            else {\r\n                textBoxObj.turnResult(attackObj.attackState);\r\n                nextTurn();\r\n            }\r\n            return attackObj.attackState;\r\n        }\r\n    })\r\n\r\n    //public fn\r\n    this.getTileNodeArray = () => tileNodes;\r\n    this.getTileFromIndex = (index) => tiles[index];\r\n    this.getTileArray = () => tiles;\r\n    //private fn\r\n    const sendAttack = (coords) => {\r\n        return gameWindows[enemyRef].defense.receiveAttack(coords);\r\n    }\r\n}\r\nfunction getTileObjArray(tileNodeArray) {\r\n    const tileObjArray = [];\r\n\r\n    for (let i = 0; i < tileNodeArray.length; i++)\r\n        tileObjArray.push(new TileObj(tileNodeArray[i], i));\r\n\r\n    return tileObjArray;\r\n    //private\r\n    function TileObj(tileNode, index) {\r\n        const coordObj = {\r\n            x: +tileNode.getAttribute('posX'),\r\n            y: +tileNode.getAttribute('posY')\r\n        }\r\n        this.getNode = () => tileNode;\r\n        this.getCoord = () => coordObj;\r\n        this.getIndex = () => index;\r\n        const tempClasses = [];\r\n        this.addTempClass = (className) => {\r\n            tempClasses.push(className);\r\n            tileNode.classList.add(className);\r\n        }\r\n        this.removeTempClasses = () => {\r\n            while (tempClasses.length > 0)\r\n                tileNode.classList.remove(tempClasses.pop());\r\n        }\r\n        this.addClass = (className) => tileNode.classList.add(className);\r\n    }\r\n}\r\n//\r\nfunction getEnemyPlayerRef(playerObj) {\r\n    let playerRef = playerObj.get.playerRef();\r\n    return playerRef === 'p1' ? 'p2' : 'p1';\r\n}\r\nfunction getPlayerName(playerObj) {\r\n    if (playerObj === 'p1') playerObj = gameState.p1;\r\n    if (playerObj === 'p2') playerObj = gameState.p2;\r\n    return playerObj.get.player().get.name();\r\n}\r\nfunction getIndexFromCoord(coord) {\r\n    return coord.x + (coord.y * gameState.get.game.boardWidth());\r\n}\r\n//\r\nfunction nextTurn() {\r\n    const playerRef = gameState.set.scene.swapPlayers();\r\n    if (gameState.get.game.isSinglePlayer()) {\r\n        if (playerRef === 'p2') {\r\n            gameState.p2.ai.sendAttack();\r\n        } else {\r\n\r\n        }\r\n    }\r\n    textBoxObj.addNewLineText(`${gameState[playerRef].get.player().get.name()}'s turn.`)\r\n}","import sceneManager, { initScene } from \"../scene-manager\";\r\nimport { generateGameTiles } from \"../scene-manager\";\r\nimport gameState from \"../game-state\";\r\nimport { CLASSES } from \"../class-manager\";\r\n\r\n//export scene to sceneManager\r\nfunction initPiecePlacement() {\r\n    return createScene('p1');\r\n}\r\nexport default initPiecePlacement\r\n\r\n//internal workings start here\r\nconst PIECE_COUNT = gameState.get.game.pieceCount();\r\nconst BOARD_WIDTH = gameState.get.game.boardWidth();\r\nconst BOARD_HEIGHT = gameState.get.game.boardHeight();\r\n\r\nconst STATES = {\r\n    current: 1,\r\n    pickTile: 1,\r\n    placeUnit: 2,\r\n}\r\n\r\nfunction createScene(playerRef) {\r\n    //generate scene node from template\r\n    const scene = initScene('TEMPLATE_piece-placement');\r\n    //generate gameTiles and add properties\r\n    const gameTiles = createGameTilesObj();\r\n    //other scoped vars\r\n    const playerObj = gameState[playerRef];\r\n    const unitObj = createUnitObj(playerObj.get.units());\r\n    const placedUnitsObj = new PlacedUnitsObj();\r\n\r\n    return scene;\r\n    //\r\n    function createGameTilesObj() {\r\n        const _submitElement = scene.querySelector('[pPlacementID=\"submit\"]');\r\n        const _quickPlayElement = scene.querySelector('[pPlacementID=\"quickPlay\"]');\r\n        const _gameBoxElement = scene.querySelector('[pPlacementID=\"gameBox\"]');\r\n        const _tileNodeArray = generateGameTiles(_gameBoxElement);\r\n        const tileObjs = [];\r\n\r\n\r\n        //removed }  here -in case that was the wrong one\r\n\r\n        let selectedTile;\r\n        //tile-class object arrays\r\n        const activeHoverTiles = [];\r\n        // const activeUnitTiles = [];\r\n\r\n        for (let i = 0; i < _tileNodeArray.length; i++) {\r\n            tileObjs.push(_tileFactory(_tileNodeArray[i], i));\r\n        }\r\n        return tileObjs;\r\n\r\n        //private functions\r\n        function _tileFactory(tileNode, index) {\r\n            let currentUnit;\r\n            const coords = {\r\n                x: +tileNode.getAttribute('posX'),\r\n                y: +tileNode.getAttribute('posY')\r\n            }\r\n            //tile object creation\r\n            const tile = {\r\n                getNode: () => tileNode,\r\n                getCoordObj: () => coords,\r\n                getCoordArray: () => [coords.x, coords.y],\r\n                getIndex: () => index,\r\n                unit: {\r\n                    place: (unit) => {\r\n                        if (currentUnit) return false;\r\n                        currentUnit = unit;\r\n                        placedUnitsObj.pushUnit(unit, tile);\r\n                        tileNode.classList.add('tile-placed-unit');\r\n                        unitObj.setUnitPlaced(unit);\r\n                    },\r\n                    removeFullUnit: (unit) => {\r\n                        let tileArr = placedUnitsObj.getTileArrayFromPlacedUnit(unit);\r\n                        tileArr.forEach(tile => {\r\n                            tile.unit.removeSelfUnit();\r\n                        });\r\n                        placedUnitsObj.removeUnit(unit);\r\n                    },\r\n                    removeSelfUnit: () => {\r\n                        currentUnit = undefined;\r\n                        tileNode.classList.remove('tile-placed-unit');\r\n                    },\r\n                    getUnit: () => currentUnit,\r\n                },\r\n                nextTile: {\r\n                    up: () => tileObjs[index - BOARD_WIDTH],\r\n                    down: () => tileObjs[index + BOARD_WIDTH],\r\n                    left: () => {\r\n                        if (coords.x - 1 < 0) return false;\r\n                        return tileObjs[index - 1];\r\n                    },\r\n                    right: () => {\r\n                        if (coords.x + 1 >= BOARD_WIDTH) return false;\r\n                        return tileObjs[index + 1];\r\n                    },\r\n                },\r\n                highlight: {\r\n                    selectable: () => { addHighlight(activeHoverTiles, CLASSES.lowHighlight); },\r\n                    invalid: () => { addHighlight(activeHoverTiles, CLASSES.invalidHighlight); },\r\n                    validPlaceUnit: () => { addHighlight(activeHoverTiles, CLASSES.highHighlight) },\r\n                    removableUnit: () => { addHighlight(activeHoverTiles, CLASSES.removableUnit); },\r\n                },\r\n                selectedTile: {\r\n                    unSelect: () => {\r\n                        if (!selectedTile) return console.log('no selected tile');\r\n                        selectedTile.getNode().classList.remove(CLASSES.highHighlight);\r\n                        selectedTile = undefined;\r\n                    },\r\n                    selectThis: () => {\r\n                        if (selectedTile) return false;\r\n                        if (tile.unit.getUnit()) return false;\r\n                        selectedTile = tile;\r\n                        tileNode.classList.add(CLASSES.highHighlight);\r\n                        return true;\r\n                    },\r\n                },\r\n            }\r\n            //event listeners\r\n            tileNode.addEventListener('mouseover', (e) => {\r\n                switch (STATES.current) {\r\n                    case STATES.pickTile:\r\n                        if (currentUnit) {\r\n                            highlightUnit(currentUnit);\r\n                        } else highlightAllplacements();\r\n                        break;\r\n                    case STATES.placeUnit:\r\n                        highlightCurrentPlacement();\r\n                        break;\r\n                    default: console.log(`Invalid state: ${STATES.current}.`);\r\n                }\r\n            });\r\n\r\n            tileNode.addEventListener('mouseleave', (e) => {\r\n                removeHighlights(activeHoverTiles);\r\n            });\r\n            tileNode.addEventListener('click', (e) => {\r\n                switch (STATES.current) {\r\n                    case STATES.pickTile:\r\n                        if (currentUnit) {\r\n                            tile.unit.removeFullUnit(currentUnit);\r\n                            highlightAllplacements();\r\n                        }\r\n                        else if (tile.selectedTile.selectThis())\r\n                            STATES.current = STATES.placeUnit;\r\n                        break;\r\n                    case STATES.placeUnit:\r\n                        if (tile.unit.getUnit()) return;\r\n                        if (tile === selectedTile) { //clicking selectedTile removes it\r\n                            tile.selectedTile.unSelect();\r\n                            removeHighlights(activeHoverTiles);\r\n                            STATES.current = STATES.pickTile;\r\n                            highlightAllplacements();\r\n                            break;\r\n                        }\r\n                        if (!placeUnit()) break;\r\n                        tile.selectedTile.unSelect();\r\n                        if (!tile.unit.getUnit()) highlightAllplacements()\r\n                        STATES.current = STATES.pickTile;\r\n\r\n                        break;\r\n                    default: console.log(`Invalid state: ${STATES.current}.`);\r\n                }\r\n            });\r\n\r\n            _submitElement.addEventListener('click', submitScene);\r\n            _quickPlayElement.addEventListener('click',submitQuickSelect);\r\n\r\n            //highlights in all 4 directions for a distance of the current maxLength\r\n            function highlightAllplacements() {\r\n                if (unitObj.noUnitsAvailable()) return;\r\n                tile.highlight.selectable();\r\n\r\n                const directionTiles = [\r\n                    new DirecionTileObj('up'),\r\n                    new DirecionTileObj('down'),\r\n                    new DirecionTileObj('left'),\r\n                    new DirecionTileObj('right')\r\n                ]\r\n                const minLength = unitObj.getMinLength();\r\n                const maxLength = unitObj.getMaxLength();\r\n\r\n                for (let i = 2; i <= maxLength; i++)\r\n                    directionTiles.forEach(obj => { obj.highlightNext(i); })\r\n\r\n                function DirecionTileObj(direction) {\r\n                    const tileArr = [tile];\r\n                    let tileObj = tile;\r\n\r\n                    this.highlightNext = (length) => {\r\n                        if (!tileObj) return;\r\n                        tileObj = tileObj.nextTile[direction]();\r\n\r\n                        if (!tileObj || tileObj.unit.getUnit()) {\r\n                            if (tileArr.length === 0) return tileObj = false;\r\n\r\n                            for (length--; length >= minLength && !unitObj.getUnitOfLength(length); length--) {\r\n                                tileObj = tileArr.pop();\r\n                                tileObj.getNode().classList.remove(CLASSES.invalidHighlight);\r\n                            }\r\n                            return tileObj = false;\r\n                        }\r\n                        if (unitObj.getUnitOfLength(length))\r\n                            tileObj.highlight.selectable();\r\n                        else tileObj.highlight.invalid();\r\n                        tileArr.push(tileObj);\r\n                    }\r\n                }\r\n            }\r\n            function highlightCurrentPlacement() {\r\n                if (selectedTile === tile) {\r\n                    tile.highlight.removableUnit();\r\n                    highlightAllplacements();\r\n                    return;\r\n                }\r\n                const tileArray = getTileArrayFrom(selectedTile, tile);\r\n                let setInvalid = false;\r\n                for (let i = 0; i < tileArray.length; i++) {\r\n                    let tile = tileArray[i];\r\n                    if (tile.unit.getUnit()) setInvalid = true;\r\n                    if (setInvalid) return tile.highlight.invalid();\r\n                    if (i >= 1 && !unitObj.getUnitOfLength(i + 1))\r\n                        tile.highlight.invalid();\r\n                    tile.highlight.validPlaceUnit();\r\n                }\r\n            }\r\n            function highlightUnit(unit) {\r\n                let tileArr = placedUnitsObj.getTileArrayFromPlacedUnit(unit);\r\n                tileArr.forEach(tile => {\r\n                    tile.highlight.removableUnit();\r\n                })\r\n            }\r\n            function placeUnit() {\r\n                const tileArray = getTileArrayFrom(selectedTile, tile);\r\n                const unit = unitObj.getUnitOfLength(tileArray.length);\r\n                if (!unit) return;                       //check if unit of length available\r\n                for (let i = 0; i < tileArray.length; i++) {\r\n                    let tile = tileArray[i];\r\n                    if (tile.unit.getUnit()) return;          //check if any of the tiles have units\r\n                    tile.unit.place(unit);\r\n                }\r\n                return true;\r\n            }\r\n            function getTileArrayFrom(tile1, tile2, limitByMaxLength = true) { //could be placed inside tile obj as getTileArrayTo\r\n                if (tile1 === tile2) return [tile1];\r\n\r\n                const startCoords = tile1.getCoordObj();\r\n                const endCoords = tile2.getCoordObj();\r\n                const xDif = endCoords.x - startCoords.x;\r\n                const yDif = endCoords.y - startCoords.y;\r\n                const inXAxis = Math.abs(yDif) <= Math.abs(xDif);\r\n\r\n                let length;\r\n                if (inXAxis) length = Math.abs(xDif);\r\n                else length = Math.abs(yDif);\r\n                if (limitByMaxLength && length >= unitObj.getMaxLength())\r\n                    length = unitObj.getMaxLength() - 1; //-1 because starting at 0\r\n\r\n                const tileArray = [tile1];\r\n                let tempTile = tile1;\r\n\r\n                for (let i = 0; i < length; i++) {\r\n                    let direction;\r\n                    if (!inXAxis && yDif <= 0) direction = 'up';\r\n                    else if (!inXAxis) direction = 'down';\r\n                    else if (xDif <= 0) direction = 'left'\r\n                    else direction = 'right';\r\n                    tempTile = tempTile.nextTile[direction]();\r\n                    if (tempTile) tileArray.push(tempTile);\r\n                }\r\n                return tileArray;\r\n            }\r\n\r\n            function removeHighlights(tileClassObjArray) {\r\n                while (tileClassObjArray.length > 0) {\r\n                    let obj = tileClassObjArray.pop();\r\n                    obj.tileNode.classList.remove(obj.className);\r\n                }\r\n            }\r\n            function addHighlight(tileClassObjArray, className) {\r\n                tileNode.classList.add(className);\r\n                tileClassObjArray.push(new TileClassObj(tileNode, className))\r\n            }\r\n            return tile;\r\n        }\r\n\r\n    }\r\n    function submitScene() {\r\n        if (!unitObj.noUnitsAvailable()) return;\r\n        const gameboard = playerObj.get.gameboard();\r\n        const unitArray = unitObj.getPlacedUnits();\r\n        unitArray.forEach(unit => {\r\n            const gameUnit = unitObj.getRealUnitFromClone(unit);\r\n            const tileArray = placedUnitsObj.getTileArrayFromPlacedUnit(unit);\r\n            if (unit.get.length() === 1) { //shouldn't ever have a piece of length 1, but just in case\r\n                gameboard.placeUnit(gameUnit, tileArray[0].getCoordArray());\r\n                console.log(`There shouldn't be any units of length 1.`);\r\n            }\r\n            const startCoords = tileArray[0].getCoordObj();\r\n            const endCoords = tileArray[tileArray.length - 1].getCoordObj();\r\n            const inXaxis = startCoords.x === endCoords.x ? false : true;\r\n            if (!gameboard.placeUnit(gameUnit, [startCoords.x, startCoords.y], !inXaxis)) {\r\n                console.log('Error: trying to place unit on occupied tile.');\r\n            }\r\n        })\r\n        loadNextScene();\r\n    }\r\n    function submitQuickSelect(){\r\n        playerObj.ai.placeShips();\r\n        loadNextScene();\r\n    }\r\n    function loadNextScene() {\r\n        const scenes = sceneManager.getScenes();\r\n        if (gameState.get.game.isSinglePlayer()) {\r\n            gameState.p2.ai.placeShips();\r\n            sceneManager.loadScene(scenes.main.game);\r\n            return;\r\n        }\r\n        if (playerRef === 'p2') {\r\n            sceneManager.loadScene(scenes.main.game);\r\n            return;\r\n        } else {\r\n            scenes.p2.piecePlacement = createScene('p2');\r\n            sceneManager.loadScene(scenes.p2.piecePlacement);\r\n            return;\r\n        }\r\n    }\r\n\r\n    function TileClassObj(tileNode, className) {\r\n        this.tileNode = tileNode;\r\n        this.className = className;\r\n    }\r\n\r\n    function PlacedUnitsObj() {\r\n        const placedUnitArr = [];\r\n\r\n        this.pushUnit = (unit, tile) => {\r\n            let placedUnit = placedUnitArr.find((placedUnit) => placedUnit.unit === unit);\r\n            if (!placedUnit) {\r\n                placedUnit = { unit, tileArr: [] };\r\n                placedUnitArr.push(placedUnit);\r\n            }\r\n            let tileArr = placedUnit.tileArr;\r\n            if (!tileArr.includes(tile)) tileArr.push(tile);\r\n        }\r\n        this.removeUnit = (unit) => {\r\n            const index = placedUnitArr.findIndex((placedUnit) => placedUnit.unit === unit);\r\n            if (index < 0) return false;\r\n            unitObj.setUnitAvailable(unit);\r\n            return placedUnitArr.splice(index, 1)[0];\r\n        }\r\n        this.getTileArrayFromPlacedUnit = (unit) => {\r\n            const placedUnit = placedUnitArr.find((placedUnit) => placedUnit.unit === unit);\r\n            if (!placedUnit) return [];\r\n            sortTiles(placedUnit.tileArr)\r\n            return placedUnit.tileArr;\r\n        }\r\n        function sortTiles(tileArr) {\r\n            if (tileArr.length < 2) return;\r\n            let axis = tileArr[0].getCoordObj().x === tileArr[1].getCoordObj().x ? 'y' : 'x';\r\n            tileArr.sort((a, b) => a.getCoordObj()[axis] > b.getCoordObj()[axis])\r\n        }\r\n    }\r\n}\r\n\r\nfunction createUnitObj(unitArray) {\r\n    const _availableUnits = [];\r\n    const _placedUnits = [];\r\n    let _maxLength = 0;\r\n    let _minLength;\r\n    //create semi-cloned units and fill unit array\r\n    //  and set _maxLength\r\n    unitArray.forEach((unit) => {\r\n        _availableUnits.push(new CloneUnit(unit));\r\n    })\r\n    function CloneUnit(unit) {\r\n        const id = unit.get.id();\r\n        const length = unit.get.length();\r\n        this.get = {\r\n            id: () => id,\r\n            length: () => length,\r\n        };\r\n    }\r\n    function getUnitOfLength(length) {\r\n        for (let i = 0; i < _availableUnits.length; i++) {\r\n            if (_availableUnits[i].get.length() === length) return _availableUnits[i];\r\n        }\r\n        return false;\r\n    }\r\n    function setUnitPlaced(unit) {\r\n        fromArrayToArray(_availableUnits, _placedUnits, unit);\r\n        setLengthBounds();\r\n    }\r\n    function setUnitAvailable(unit) {\r\n        fromArrayToArray(_placedUnits, _availableUnits, unit);\r\n        setLengthBounds();\r\n    }\r\n    function setLengthBounds() {\r\n        if (!_availableUnits.length) {\r\n            _minLength = 0;\r\n            _maxLength = 0;\r\n            return;\r\n        }\r\n        _minLength = false;\r\n        _maxLength = 0;\r\n        for (let i = 0; i < _availableUnits.length; i++) {\r\n            length = _availableUnits[i].get.length();\r\n            if (_maxLength < length) _maxLength = length;\r\n            if (!_minLength || _minLength > length) _minLength = length;\r\n        }\r\n    }\r\n    function fromArrayToArray(fromArr, toArr, item) {\r\n        const index = fromArr.indexOf(item);\r\n        if (index < 0) return false;\r\n        toArr.push(item);\r\n        fromArr.splice(index, 1);\r\n    }\r\n    function getRealUnitFromClone(cloneUnit) {\r\n        let id = cloneUnit.get.id();\r\n        for (let i = 0; i < unitArray.length; i++) {\r\n            if (id === unitArray[i].get.id())\r\n                return unitArray[i];\r\n        }\r\n        return false;\r\n    }\r\n    const unitObj = {\r\n        getAvailableUnitCount: () => _availableUnits.length,\r\n        noUnitsAvailable: () => _availableUnits.length === 0,\r\n        getPlacedUnits: () => _placedUnits,\r\n        getMinLength: () => _minLength,\r\n        getMaxLength: () => _maxLength,\r\n        getUnitOfLength,\r\n        setUnitPlaced,\r\n        setUnitAvailable,\r\n        getRealUnitFromClone,\r\n    }\r\n    setLengthBounds();\r\n    return unitObj;\r\n}","import { initScene } from \"../scene-manager\";\r\nimport sceneManager from \"../scene-manager\";\r\nimport playerFactory from \"../player-factory\";\r\nimport gameState from \"../game-state\";\r\n\r\nfunction initPlayerSelect() {\r\n    let scene = initScene('TEMPLATE_player-select');\r\n    const submitButton = scene.querySelector('[pSelectID=\"submit\"]');\r\n    const singlePlayerInput = scene.querySelector('[pSelectID=\"singlePlayer\"]');\r\n    const p1Input = scene.querySelector('[pSelectID=\"player1\"]');\r\n    const p2Input = scene.querySelector('[pSelectID=\"player2\"]');\r\n\r\n\r\n    submitButton.addEventListener('click', _onSubmit);\r\n    function _onSubmit() {\r\n        let singlePlayer = singlePlayerInput.checked;\r\n        //p1\r\n        let name = p1Input.value;\r\n        if (name === '') name = 'Player1';\r\n        let type = 'human';\r\n        let player = playerFactory(name, type);\r\n        gameState.p1.set.player(player);\r\n\r\n        //p2\r\n        if (singlePlayer) {\r\n            name = 'CPU';\r\n            type = 'computer';\r\n        }\r\n        else {\r\n            name = p2Input.value;\r\n            if (name === '') name = 'Player 2';\r\n        }\r\n        player = playerFactory(name, type);\r\n        gameState.p2.set.player(player)\r\n        //\r\n        gameState.set.game.isSinglePlayer(singlePlayer);\r\n        sceneManager.loadScene(sceneManager.getScenes().p1.piecePlacement);\r\n    }\r\n    return scene;\r\n}\r\n\r\nexport default initPlayerSelect;","import { initScene } from \"../scene-manager\";\r\nimport sceneManager from \"../scene-manager\";\r\n\r\nfunction initTitleScreen() {\r\n    let scene = initScene('TEMPLATE_title-screen');\r\n    document.body.addEventListener('click', _onButtonPress);\r\n    document.body.addEventListener('keypress', _onButtonPress);\r\n\r\n    function _onButtonPress() {\r\n        document.body.removeEventListener('click', _onButtonPress);\r\n        document.body.removeEventListener('keypress', _onButtonPress);\r\n        if (sceneManager.getCurrentScene() == scene) sceneManager.loadScene(sceneManager.getScenes().main.playerSelect);\r\n        else console.log(`Current scene is not titleScreen. Removing titleScreen event listeners and returning.`);\r\n    }\r\n    return scene;\r\n}\r\n\r\nexport default initTitleScreen;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","__webpack_require__.nc = undefined;","import './styles/reset.css';\r\nimport './styles/style.css';\r\n\r\nimport sceneManager from './scripts/scene-manager';\r\nimport { setDummyUnits } from './scripts/game-state';\r\n\r\n\r\n//setDummyUnits();\r\nsceneManager.initializeScenes();\r\nconst scenes = sceneManager.getScenes();\r\n\r\nsceneManager.loadScene(scenes.main.titleScreen);\r\n\r\n//sceneManager.loadScene(scenes.p1.piecePlacement)\r\n// sceneManager.loadScene(scenes.main.game);\r\n"],"names":[],"sourceRoot":""}